<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turtle.dao.SysDeptDao">

	<!-- 查询我们要的部门信息 -->
	<select id="findObjects" resultType="map">
		select c.*,(select p.name from sys_depts p where c.parentId=p.id)
		parentName
		from sys_depts c
		<!-- 第二种实施方案 -->
		<!-- select c.*,p.name parentName from sys_depts c left join sys_depts 
			p on c.parentId = p.id -->
	</select>

	<!-- 通过部门id来得出部门的详细信息 -->
	<select id="findById" resultType="com.turtle.entity.SysDept">
		select * from sys_depts
		where id = #{id}
	</select>

	<!-- 通过部门id来查询其是否有子部门 -->
	<select id="getChildCount" resultType="int">
		select count(*) from
		sys_depts
		where
		parentId = #{id}
	</select>

	<!-- 通过部门id来删除部门信息 -->
	<delete id="deleteObject">
		delete from sys_depts
		where id = #{id}
	</delete>

	<!-- 查询部门表中的上下级菜单信息 -->
	<select id="findZtreeDeptNodes" resultType="com.turtle.vo.Node">
		select
		id,name,parentId from sys_depts
	</select>

	<!-- 将部门信息写入部门信息表中 -->
	<insert id="insertObject">
		insert into sys_depts
		(name,sort,note,parentId,createdTime,modifiedTime,createdUser,modifiedUser)
		values
		(#{name},#{sort},#{note},#{parentId},now(),now(),#{createdUser},#{modifiedUser})
	</insert>

	<!-- 对表的更新操作 -->
	<update id="updateObject">
		update sys_depts set
		name=#{name},note=#{note},sort=#{sort},parentId=#{parentId},
		modifiedUser=#{modifiedUser},modifiedTime=now()
		where id=#{id}
	</update>


</mapper>


